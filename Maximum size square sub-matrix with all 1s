import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.*;

public class Test {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(bufferedReader.readLine());
        while(t --> 0) {
            String[] nm = bufferedReader.readLine().split(" ");
            int n = Integer.parseInt(nm[0]);
            int m = Integer.parseInt(nm[1]);
            int[][] arr = new int[n][m];
            String[] str = bufferedReader.readLine().split(" ");
            int k = 0;
            for(int i=0; i<n; i++) {
                for(int j=0; j<m; j++) {
                    arr[i][j] = Integer.parseInt(str[k++]);
                }
            }

            int[][] dp = new int[n][m];

            for(int i=0; i<n; i++) {
                dp[i][0] = arr[i][0];
            }
            for(int i=0; i<m; i++) {
                dp[0][i] = arr[0][i];
            }
            int max = dp[0][0];

            for(int i=1; i<n; i++) {
                for(int j=1; j<m; j++) {
                    if(arr[i][j] == 1) {
                        dp[i][j] = 1 + Math.min(dp[i-1][j], Math.min(dp[i][j-1], dp[i-1][j-1]));
                        } else {
                            dp[i][j] = 0;
                        }
                    }
                }

            for(int i=0; i<n; i++) {
                for(int j=0; j<m; j++) {
                    if(dp[i][j] > max) {
                        max = dp[i][j];
                    }
                }
            }

            System.out.println(max);
        }
    }
}
