import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.Buffer;
import java.util.*;

class Practise {
    static int max;
    public static void main(String[] args) throws IOException {
        int[] arr = {1, 101, 2, 3, 100, 4, 5};
        int n = arr.length;
        int index = 2, k = 5;

//        int[] dp = new int[n];
//        for(int j=0; j<n; j++) {
//            dp[j] = arr[j];
//        }
//        int max = Integer.MIN_VALUE;
//
//        for(int x=1; x<=i && x<n; x++) {
//            for(int y=0; y<x; y++) {
//                if(arr[x] < arr[k] && arr[x] > arr[y]) {
//                    dp[x] = Math.max(dp[x], dp[y]+arr[x]);
//                    max = Math.max(max, dp[x]);
//                }
//            }
//        }

//        System.out.println(max+arr[k]);

        int[][] dp = new int[n][n];

        for(int i=0; i<n; i++) {
            if(arr[i] > arr[0])
                dp[0][i] = arr[i]+arr[0];
            else
                dp[0][0] = arr[i];
        }

        for(int x=1; x<n; x++) {
            for(int y=0; y<n; y++) {
                if(arr[y] > arr[x] && y > x) {
                    if(dp[x-1][x] + arr[y] > dp[x-1][y]) {
                        dp[x][y] = dp[x-1][x] + arr[y];
                    } else {
                        dp[x][y] = dp[x-1][y];
                    }
                } else {
                    dp[x][y] = dp[x-1][y];
                }
            }
        }

        System.out.println(dp[index][k]);
    }
}
