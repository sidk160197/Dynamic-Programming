import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.nio.Buffer;
import java.util.*;

public class Test {
    static int[][] dp;
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(bufferedReader.readLine());
        while(t --> 0) {
            String[] mn = bufferedReader.readLine().split(" ");
            int m = Integer.parseInt(mn[0]);
            int n = Integer.parseInt(mn[1]);

            dp = new int[m+1][n+1];
            for(int[] a: dp)
                Arrays.fill(a, -1);
            System.out.println(getCount(m, n));
        }
    }

    public static int getCount(int m, int n) {
        if(m<n)
            return 0;
        if(n==0)
            return 1;

        if(dp[m][n] != -1)
            return dp[m][n];

        return dp[m][n] = getCount(m-1, n) + getCount(m/2, n-1);
    }
}
